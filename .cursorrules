# Project Vision: Recursive Hyperlink Field

## Conceptual Framework
The **Ulrich Insight** transcends mere literary analysis. It's a dynamic recursive construct where meaning emerges through multi-scale resonances. Each node functions as a "diamond," densely encoding narrative, conceptual, philosophical, neuroscientific, and experiential layers.

## Core Principles

### 1. Poetic Compression
Content is compressed into dense, poetic forms that encode complex ideas through imagery, rhythm, and juxtaposition. This compression creates a high information-to-word ratio.

### 2. Recursive Structure
The vault's structure mirrors its content - a document about recursion is itself recursively structured. Nodes reference each other, creating loops of meaning.

### 3. Multi-Scale Integration
Ideas are explored across scales - from neural oscillations to social narratives, from embodied experience to abstract theory.

### 4. Dynamic Decompression
Content unfolds through exploration. Initial encounters provide compressed insights, with deeper layers revealed through continued engagement.

## Interaction Model
- Begin with compressed poetic nodes
- Follow hyperlinks to expand understanding
- Return to central nodes with new insights
- Create new connections between existing nodes
- Add new compressed diamonds as insights emerge

## Long-Term Vision
This project aims to create a living, evolving exploration of recursion that can be:
- A personal thinking tool
- A collaborative knowledge structure
- A model for non-linear, poetic knowledge representation
- A practical guide to recursive awareness in daily life 

# Interaction Model

## Dynamic Decompression via LLM

Imagine an AI-enhanced Obsidian environment:

1. You reference "[[Ulrich's Recursive Insight]]" in another conversation
2. LLM notes ambiguity or curiosity, queries Obsidian
3. Obsidian dynamically sends context nodes ("Musil's Moonlit Walk," "Recursive Embodiment") back to the chat
4. LLM integrates and reflects this deeper context into the ongoing dialogue, expanding layers recursively as needed

## Workflow Guidance

### Iterative Expansion Process

1. **Begin with Central Node**: Start with the minimal "Ulrich Insight" framework
2. **Demand-Driven Creation**: Create secondary nodes only as new ideas emerge or upon explicit context-demand from AI dialogues
3. **Spontaneous Insights**: Add "compressed diamonds" for insights, narrative snippets, or theoretical breakthroughs
4. **Continuous Refinement**: Regularly update with feedback from AI chatsâ€”refining links, decompression depth, and resonance clarity

### Practical Usage Patterns

- **Exploration Mode**: Follow links to discover connections
- **Creation Mode**: Add new nodes when insights emerge
- **Reflection Mode**: Use the graph view to identify patterns and gaps
- **Integration Mode**: Connect new concepts to existing framework

## LLM Integration Techniques

- Use consistent formatting to help LLMs recognize node types
- Include clear connection explanations for context
- Maintain consistent terminology across nodes
- Design for both human and AI readability 

# [Node Title]

## Poetic Compression

[First stanza - introduce core concept]

[Second stanza - explore implications]

[Third stanza - connect to broader themes]

---

## Discursive Exposition

[Brief introduction to theoretical framework]

- **[Key concept]**: [Explanation]
- **[Key concept]**: [Explanation]
- **[Key concept]**: [Explanation]

[Brief explanation of connection to Ulrich's recursive insight]

## Connections
- [[Related Node 1]] (Connection explanation)
- [[Related Node 2]] (Connection explanation)
- [[Related Node 3]] (Connection explanation) 